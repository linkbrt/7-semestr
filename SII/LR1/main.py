import networkx as nx


G = nx.DiGraph()

G.add_edges_from([
    ("Выберите погоду", "Холодно"),
    ("Выберите погоду", "Тепло"),
    ("Выберите погоду", "Дождливо"),
    ("Выберите погоду", "Снег"),
    ("Выберите погоду", "Ветреное"),
    ("Холодно", "Дождь"),
    ("Холодно", "Снег"),
    ("Холодно", "Сухо"),
    ("Тепло", "Солнечно"),
    ("Тепло", "Облачно"),
    ("Дождливо", "Наденьте дождевик"),
    ("Дождливо", "Наденьте водонепроницаемые обувь"),
    ("Дождливо", "Наденьте шляпу"),
    ("Снег", "Наденьте теплую куртку"),
    ("Снег", "Наденьте шапку и перчатки"),
    ("Снег", "Наденьте зимние сапоги"),
    ("Солнечно", "Наденьте футболку"),
    ("Солнечно", "Наденьте легкие штаны"),
    ("Солнечно", "Наденьте солнцезащитные очки"),
    ("Облачно", "Наденьте легкую куртку"),
    ("Облачно", "Наденьте свитер"),
    ("Ветреное", "Наденьте ветровку"),
    ("Ветреное", "Наденьте шарф"),
    ("Ветреное", "Наденьте легкие перчатки"),
])


def ask_question(node):
    print(node)
    answers = list(G.successors(node))
    for i, answer in enumerate(answers):
        print(f"{i + 1}. {answer}")

    choice = int(input("Выберите номер: ")) - 1
    next_node = answers[choice]

    if not list(G.successors(next_node)):
        print(next_node)
    else:
        ask_question(next_node)

ask_question("Выберите погоду")
